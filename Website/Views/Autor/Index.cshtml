@using Biblioteca.Data
@model IEnumerable<Autor>

@{
    ViewBag.Title = "Autor";
}



    <section class="well">

        @(Html.Kendo().Grid<Autor>()
    .Name("grid")
    .HtmlAttributes(new { @class = "ra-section" })
    .Columns(columns =>
    {
        columns.Bound(p => p.Id);
        columns.Bound(p => p.Nome);
        columns.Command(command => { command.Edit(); command.Destroy(); }).Width("20%");
    })
    .ToolBar(toolbar => toolbar.Create())
    .Editable(editable => editable.Mode(GridEditMode.PopUp))
    .Pageable()
    .Sortable()
    .Scrollable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Events(events => events.Error("error_handler"))
        .Model(model => model.Id(p => p.Id))
        .Create(update => update.Action("Create", "Autor"))
        .Read(read => read.Action("Read", "Autor"))
        .Update(update => update.Action("Update", "Autor"))
        .Destroy(update => update.Action("Destroy", "Autor"))
    )
        )
        <script type="text/javascript">
            function error_handler(e) {
                if (e.errors) {
                    var message = "Errors:\n";
                    $.each(e.errors, function (key, value) {
                        if ('errors' in value) {
                            $.each(value.errors, function () {
                                message += this + "\n";
                            });
                        }
                    });
                    alert(message);
                }
            }
        </script>
    </section>

