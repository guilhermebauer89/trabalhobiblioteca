@model Biblioteca.Data.Emprestimo

@{
    ViewBag.Title = "Inserir";
}

<h2>Inserir</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationMessage("Validacao")

    <div class="form-horizontal">
        <h4>Emprestimo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdEmprestimo)

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MatriculaUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DropDownListFor(model => model.MatriculaUsuario)
                .BindTo(ViewBag.MatriculaUsuario as SelectList)
                )

                @Html.ValidationMessageFor(model => model.MatriculaUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdLivro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DropDownListFor(model => model.IdLivro)
                              .BindTo(ViewBag.IdLivro as SelectList)
                )
                @Html.ValidationMessageFor(model => model.IdLivro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdExemplar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DropDownList().Name("IdExemplar")
                .BindTo(ViewBag.IdExemplar as SelectList).CascadeFrom("IdLivro"))
                @Html.ValidationMessageFor(model => model.IdExemplar, "", new { @class = "text-danger" })
            </div>
            <script>
                function exemplaresFiltrados() {
                    return {
                        id: $("#IdLivro").val()
                    };
                }
            </script>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataPrevista, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Kendo().DatePicker().Format("dd/MM/yyyy").Name("DataPrevista").HtmlAttributes(new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DataPrevista, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataDevolucao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Kendo().DatePicker().Format("dd/MM/yyyy").Name("DataDevolucao").HtmlAttributes(new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DataDevolucao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValorMulta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().NumericTextBox<decimal>().Name("ValorMulta").Format("c").Min(0))
                @*@Html.EditorFor(model => model.ValorMulta, new {htmlAttributes = new {@class = "form-control"}})*@
                @Html.ValidationMessageFor(model => model.ValorMulta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Cadastrar" class="btn btn-default"/>
                @Html.ValidationMessage("erro", "", new { @class = "text-danger" })
            </div>
        </div>


    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>
