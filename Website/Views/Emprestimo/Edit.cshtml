@model Biblioteca.Data.Emprestimo

@{
    ViewBag.Title = "Edit";
}

<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationMessage("Validacao")

    <div class="form-horizontal">
        <h4>Emprestimo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdEmprestimo)

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MatriculaUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DropDownListFor(model => model.MatriculaUsuario)
                .BindTo(ViewBag.MatriculaUsuario as SelectList)
                .Enable(false)
                )

                @Html.ValidationMessageFor(model => model.MatriculaUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdLivro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DropDownListFor(model => model.IdLivro)
                              .BindTo(ViewBag.IdLivro as SelectList)
                              .Enable(false)
                )
                @Html.ValidationMessageFor(model => model.IdLivro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdExemplar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DropDownList().Name("IdExemplar")
                      .BindTo(ViewBag.IdExemplar as SelectList).Enable(false))
                
                @Html.ValidationMessageFor(model => model.IdExemplar, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataPrevista, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Kendo().DatePicker().Name("DataPrevista").HtmlAttributes(new { @class = "form-control" }).Enable(false)
                @Html.ValidationMessageFor(model => model.DataPrevista, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataDevolucao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Kendo().DatePicker().Name("DataDevolucao").HtmlAttributes(new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DataDevolucao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValorMulta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().NumericTextBox<decimal>().Name("ValorMulta").Format("c").Min(0))
                @*@Html.EditorFor(model => model.ValorMulta, new {htmlAttributes = new {@class = "form-control"}})*@
                @Html.ValidationMessageFor(model => model.ValorMulta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>


    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>